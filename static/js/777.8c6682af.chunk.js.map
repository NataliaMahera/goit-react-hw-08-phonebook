{"version":3,"file":"static/js/777.8c6682af.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","components/ContactListItem/GetRandomHexColor.js","components/ContactList/ContactList.module.css","redux/contacts/contactsSelectors.js","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Notification/Notification.module.css?a91f","components/Notification/Notification.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactsForm/ContactsForm.module.css?d5f2","../node_modules/nanoid/index.browser.js","components/ContactsForm/ContactsForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactListItem_wrapper__bo93v\",\"deleteBtn\":\"ContactListItem_deleteBtn__roUYm\",\"name\":\"ContactListItem_name__cIBvF\",\"circle\":\"ContactListItem_circle__sv-kh\",\"contactListItem\":\"ContactListItem_contactListItem__A4sXv\",\"letter\":\"ContactListItem_letter__QC70b\"};","import { useDispatch } from 'react-redux';\nimport css from './ContactListItem.module.css';\nimport { deleteContactsThunk } from 'redux/contacts/contactsOperations';\nimport { getRandomHexColor } from './GetRandomHexColor';\n\nconst ContactListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <div className={css.wrapper}>\n      <li key={id} className={css.contactListItem}>\n        <div className={css.circle}>\n          <span className={css.letter} style={{ color: getRandomHexColor() }}>\n            {name.slice(0, 1).toUpperCase()}\n          </span>\n        </div>\n        <b className={css.name}>{name} : </b>\n        {number.slice(0, 13)}\n      </li>\n      <button\n        type=\"button\"\n        className={css.deleteBtn}\n        onClick={() => dispatch(deleteContactsThunk(id))}\n      >\n        Delete\n      </button>\n    </div>\n  );\n};\n\nexport default ContactListItem;\n","export function getRandomHexColor() {\n  return `#${Math.floor(Math.random() * 16777215)\n    .toString(16)\n    .padStart(6, 0)}`;\n}\n","// extracted by mini-css-extract-plugin\nexport default {};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contactItems; // Повертаємо контакти зі state\nexport const selectFilter = state => state.filter.filterQuery; // Повертаємо поточний фільтр зі state\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterQuery) => {\n    return contacts.filter(\n      ({ name, number }) =>\n        name.toLowerCase().includes(filterQuery.toLowerCase().trim()) ||\n        number.includes(filterQuery.toLowerCase().trim())\n    );\n  }\n);\n","import ContactListItem from 'components/ContactListItem/ContactListItem';\nimport { useSelector } from 'react-redux/es/hooks/useSelector';\nimport css from './ContactList.module.css';\nimport {\n  selectIsLoading,\n  selectVisibleContacts,\n} from 'redux/contacts/contactsSelectors';\nimport Loader from 'components/Loader/Loader';\n\nconst ContactList = () => {\n  const filteredContacts = useSelector(selectVisibleContacts);\n  const isLoading = useSelector(selectIsLoading);\n\n  // const sotredContacts = [...filteredContacts].sort((a, b) => b.name - a.name);\n\n  return (\n    <>\n      <ul className={css.contactList}>\n        {isLoading && <Loader />}\n        {!isLoading &&\n          filteredContacts.map(({ id, name, number }) => (\n            <ContactListItem key={id} id={id} name={name} number={number} />\n          ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\"};","import css from './Container.module.css';\n\nconst Container = ({ children }) => {\n  return <div className={css.container}>{children}</div>;\n};\n\nexport default Container;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterLabel\":\"Filter_filterLabel__+pnW-\",\"input\":\"Filter_input__N7T3z\",\"description\":\"Filter_description__pfMKW\"};","import { useDispatch, useSelector } from 'react-redux';\nimport css from './Filter.module.css';\nimport { selectFilter } from 'redux/contacts/contactsSelectors';\nimport { changeFilter } from 'redux/contacts/filterSlice';\n\n// Компонент фільтрації контактів\nconst Filter = () => {\n  const filterQuery = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const onChangeFilter = ({ currentTarget: { value } }) => {\n    const newValue = value.toLowerCase();\n    dispatch(changeFilter(newValue));\n  };\n  return (\n    <>\n      <label className={css.filterLabel}>\n        <p className={css.description}>Find contacts by name</p>\n        <input\n          type=\"text\"\n          name=\"filter\"\n          className={css.input}\n          value={filterQuery}\n          onChange={onChangeFilter}\n          placeholder=\"Enter your contact\"\n        />\n      </label>\n    </>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"fbTitle\":\"Notification_fbTitle__2vPsu\"};","import css from './Notification.module.css';\n\nconst Notification = ({ message }) => {\n  return <h2 className={css.fbTitle}>{message}</h2>;\n};\n\nexport default Notification;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactsForm_form__1Y65-\",\"label\":\"ContactsForm_label__Z7jht\",\"input\":\"ContactsForm_input__UjXFK\",\"addBtn\":\"ContactsForm_addBtn__6R6PD\",\"modalText\":\"ContactsForm_modalText__d4dep\",\"descModal\":\"ContactsForm_descModal__9DFsD\"};","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport css from './ContactsForm.module.css';\nimport { nanoid } from 'nanoid';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport { addContactsThunk } from 'redux/contacts/contactsOperations';\nimport { Notify } from 'notiflix';\n\nconst ContactsForm = () => {\n  const [data, setData] = useState({ name: '', number: '' });\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const isExist = contacts.some(\n      contact =>\n        contact.name.toLowerCase().trim() === data.name.toLowerCase().trim() ||\n        contact.number === data.number\n    );\n\n    if (isExist) {\n      Notify.warning(`${data.name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(\n      addContactsThunk({ name: data.name, number: data.number, id: nanoid() })\n    );\n    // .unwrap()\n    // .then(data => {\n    //   setData({ name: '', number: '' });\n    //   Notify.success(`${data.name} successfully added to your contacts`);\n    // })\n    // .catcth(() => {\n    //   Notify.failure(\"Sorry, something's wrong\");\n    // });\n\n    setData({ name: '', number: '' });\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    setData({ ...data, [name]: value });\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={css.form}>\n        <p className={css.modalText}>Add new contact to your phonebook</p>\n        <label className={css.label}>\n          <p className={css.descModal}>Name</p>\n          <input\n            type=\"text\"\n            name=\"name\"\n            className={css.input}\n            value={data.name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            required\n          />\n        </label>\n\n        <label className={css.label}>\n          <p className={css.descModal}>Number</p>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            className={css.input}\n            value={data.number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            required\n          />\n        </label>\n\n        <button\n          // onClick={() => dispatch(closeModal())}\n          type=\"submit\"\n          className={css.addBtn}\n        >\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default ContactsForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebookContainer\":\"Section_phonebookContainer__j1LVG\",\"title\":\"Section_title__SLHvV\"};","import css from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <div className={css.phonebookContainer}>\n      <h2 className={css.title}>{title}</h2>\n      {children}\n    </div>\n  );\n};\n\nexport default Section;\n","import ContactList from 'components/ContactList/ContactList';\nimport Container from 'components/Container/Container';\nimport Filter from 'components/Filter/Filter';\nimport Loader from 'components/Loader/Loader';\nimport Notification from 'components/Notification/Notification';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContactsThunk } from 'redux/contacts/contactsOperations';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/contactsSelectors';\nimport ContactsForm from 'components/ContactsForm/ContactsForm';\nimport Section from 'components/Section/Section';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  // const isOpenModal = useSelector(selectIsOpenModal);\n\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n  const showContacts = Array.isArray(contacts) && contacts.length > 0;\n\n  return (\n    <>\n      <Container>\n        <Section title=\"Phonebook contacts\">\n          {/* {!isLoading && <ContactsForm />} */}\n          <ContactsForm />\n          {contacts.length > 0 ? (\n            <Filter />\n          ) : (\n            <Notification message=\"Your phonebook is empty. Please add your contact!\" />\n          )}\n          {error !== null && <p>{error}</p>}\n          {showContacts && <ContactList />}\n          {isLoading && <Loader />}\n          {/* {isOpenModal && <Modal />} */}\n          {/* <button\n        className={css.newContactBtn}\n        type=\"button\"\n        onClick={() => dispatch(openModal())}\n      >\n        New contact\n      </button> */}\n        </Section>\n      </Container>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["_ref","id","name","number","dispatch","useDispatch","_jsxs","className","css","children","_jsx","style","color","concat","Math","floor","random","toString","padStart","slice","toUpperCase","type","onClick","deleteContactsThunk","selectContacts","state","contacts","contactItems","selectFilter","filter","filterQuery","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","toLowerCase","includes","trim","filteredContacts","useSelector","_Fragment","Loader","map","ContactListItem","value","onChange","newValue","currentTarget","changeFilter","placeholder","message","nanoid","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","byte","_useState","useState","_useState2","_slicedToArray","data","setData","handleChange","event","_event$target","target","_objectSpread","_defineProperty","onSubmit","preventDefault","some","contact","Notify","addContactsThunk","pattern","required","title","useEffect","getContactsThunk","showContacts","Array","isArray","Container","Section","ContactsForm","Filter","Notification","ContactList"],"sourceRoot":""}